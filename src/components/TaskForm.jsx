/* eslint-disable react/prop-types */
// import PropTypes from 'prop-types';
import { useState, useContext } from 'react';
import { ContexTask } from '../context/TaskContext';

function TaskForm() {

  const { createTask } = useContext(ContexTask)

    const [title, setTitle] = useState(''),
          [description, setDescription] = useState('');

    const handleSubmit = event => {
        event.preventDefault();

        createTask({title, description});
    }

  return (
      <div className='max-w-md mx-auto'>
        <form onSubmit={handleSubmit} className='bg-slate-800 p-10 mb-4'>
          <h1 className='text-white text-2xl font-bold mb-3'>Crea tu tarea</h1>
        <input type="text" placeholder='Esribe tu tarea' 
            onChange={e => setTitle(e.target.value)}
            className='bg-slate-300 p-3 w-full mb-2'
        />
        <textarea placeholder='describe tu tarea...' 
        onChange={e => setDescription(e.target.value)}
        className='bg-slate-300 p-3 w-full mb-2'
        >

        </textarea>
        <button className='bg-indigo-500 px-3 py-1 text-white'>Guardar</button>
      </form>
      </div>
  )
}

// TaskForm.propTypes = {
//   createTask: PropTypes.func.isRequired
// }

export default TaskForm


// La validaci칩n de las props en React con propTypes es una forma de asegurarte de que tu componente est치 recibiendo los datos correctos en las props. Esto es especialmente 칰til en aplicaciones grandes donde los componentes pueden recibir muchas props y quieres asegurarte de que todas ellas tienen los tipos de datos correctos.

// Aqu칤 te dejo algunos beneficios de usar propTypes:

// Documentaci칩n: Los propTypes proporcionan una forma de documentar qu칠 props espera un componente. Esto puede ser muy 칰til cuando otras personas trabajan en tu c칩digo, ya que pueden ver r치pidamente c칩mo se supone que deben usar el componente.
// Depuraci칩n: Si una prop no cumple con el tipo de dato esperado, React mostrar치 una advertencia en la consola del navegador en modo de desarrollo. Esto puede ayudarte a detectar bugs.
// Prevenci칩n de bugs: Al asegurarte de que las props tienen los tipos de datos correctos, puedes prevenir bugs que podr칤an ser causados por datos inesperados.
// Es importante mencionar que propTypes es una caracter칤stica opcional y no es necesario usarla para crear componentes de React. Sin embargo, puede ser una herramienta 칰til para mejorar la calidad y la mantenibilidad de tu c칩digo.

// Espero que esto te ayude a entender mejor por qu칠 se utilizan los propTypes. Si tienes m치s preguntas, no dudes en preguntar. 游땕